(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     73304,       1566]
NotebookOptionsPosition[     71642,       1520]
NotebookOutlinePosition[     72989,       1559]
CellTagsIndexPosition[     72891,       1553]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Unprotect", "[", "Out", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"$HistoryLength", "=", "0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", 
    RowBox[{"\"\<HCMP`\>\"", ",", 
     RowBox[{
     "URLDownload", "[", 
      "\"\<https://raw.githubusercontent.com/wqfang/HCMP_Project/master/src/\
HCMP.wl\>\"", "]"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CenterMessageDialog", "[", "text_", "]"}], ":=", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"apc", "=", "AbsoluteCurrentValue"}], "}"}], ",", 
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"parentCenter", "=", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"apc", "[", "WindowMargins", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{";;", ",", "1"}], "]"}], "]"}], "+", 
              RowBox[{".5", " ", 
               RowBox[{"apc", "[", "WindowSize", "]"}]}]}], ",", 
             RowBox[{"{", 
              RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"MessageDialog", "[", 
          RowBox[{"text", ",", "\[IndentingNewLine]", 
           RowBox[{"NotebookDynamicExpression", "\[RuleDelayed]", 
            RowBox[{"Refresh", "[", 
             RowBox[{
              RowBox[{"SetOptions", "[", 
               RowBox[{
                RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
                RowBox[{"WindowMargins", "\[Rule]", 
                 RowBox[{"(", 
                  RowBox[{"parentCenter", "-", 
                   RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{".5", " ", 
                    RowBox[{"apc", "[", "WindowSize", "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}]}], ")"}]}],
                 ",", 
                RowBox[{"NotebookDynamicExpression", "\[Rule]", "None"}]}], 
               "]"}], ",", "None"}], "]"}]}]}], "]"}], ";"}]}], "]"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Work Dir: \>\"", "<>", "WorkDir"}], ",", 
         "SpanFromLeft"}], "}"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Reference Dir: \>\"", "<>", "RefDir"}], ",", 
         "SpanFromLeft"}], "}"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Deformation Dir: \>\"", "<>", "DefDir"}], ",", 
         "SpanFromLeft"}], "}"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"Plt1", ",", "Plt2"}], "}"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Item", "[", 
          RowBox[{"Plt3", ",", 
           RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
         "SpanFromLeft"}], "}"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "\"\<Reference Volume (\!\(\*SuperscriptBox[\(\[Mu]m\), \(3\)]\)) : \
\>\"", "<>", 
          RowBox[{"ToString", "@", "Vol1"}]}], ",", 
         RowBox[{
         "\"\<Deformed Volume (\!\(\*SuperscriptBox[\(\[Mu]m\), \(3\)]\)) : \
\>\"", "<>", 
          RowBox[{"ToString", "@", "Vol2"}]}]}], "}"}], "\[IndentingNewLine]",
        ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Reference Radius (\[Mu]m) : \>\"", "<>", 
          RowBox[{"ToString", "@", "radius"}]}], ",", 
         RowBox[{"\"\<Average Pressure (Pa): \>\"", "<>", 
          RowBox[{"ToString", "@", "AP"}]}]}], "}"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Z-slice distance (\[Mu]m) : \>\"", "<>", 
          RowBox[{"ToString", "@", "zd"}]}], ",", 
         RowBox[{
         "\"\<Elastic Energy Density (J/\!\(\*SuperscriptBox[\(m\), \
\(3\)]\)): \>\"", "<>", 
          RowBox[{"ToString", "[", "EED", "]"}]}]}], "}"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Elastic Energy (\[Mu]J): \>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"EE", ",", "StandardForm"}], "]"}]}], ",", 
         "SpanFromLeft"}], "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "}"}]}]}], 
    "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"WorkDir", ",", "\"\<Null\>\""}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"RefDir", ",", "\"\<Null\>\""}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"DefDir", ",", "\"\<Null\>\""}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"WorkDir", ",", "DefaultDir"}], "}"}], ",", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"RefDir", ",", "DefaultDir1"}], "}"}], ",", "None"}], "}"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"DefDir", ",", "DefaultDir2"}], "}"}], ",", "None"}], "}"}]}],
     "*)"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Vol1", ",", "\"\<Null\>\""}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Vol2", ",", "\"\<Null\>\""}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"radius", ",", "\"\<Null\>\""}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"AP", ",", "\"\<Null\>\""}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"zd", ",", "\"\<Null\>\""}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"EED", ",", "\"\<Null\>\""}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"EE", ",", "\"\<Null\>\""}], "}"}], ",", "None"}], "}"}], 
   "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Plt1", ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"White", ",", 
           RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
           RowBox[{"Rectangle", "[", "]"}]}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "}"}], ",", 
     "None"}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Plt2", ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"White", ",", 
           RowBox[{"EdgeForm", "[", "Black", "]"}], ",", 
           RowBox[{"Rectangle", "[", "]"}]}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], "}"}], ",", 
     "None"}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Plt3", ",", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"White", ",", 
           RowBox[{"Rectangle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"10", ",", "0.7"}], "}"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "360"}]}], "]"}]}], "}"}], ",", 
     "None"}], "}"}], "\[IndentingNewLine]", ",", 
   RowBox[{"DynamicModule", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"BT", "=", "0.06"}], ",", 
       RowBox[{"ES", "=", "10"}], ",", 
       RowBox[{"Y0", "=", "262."}], ",", 
       RowBox[{"\[Nu]0", "=", "0.443"}], ",", 
       RowBox[{"MeshRefineFactor", "=", "0.2"}], ",", "\[IndentingNewLine]", 
       ",", 
       RowBox[{"ScaleFactor", "=", "0.03"}], ",", 
       RowBox[{"rTube", "=", "0.25"}], ",", 
       RowBox[{"ArrowHeadSize", "=", "0.03"}], ",", 
       RowBox[{"MinArrowLength", "=", "4"}], ",", 
       RowBox[{"ScaleArrowH", "=", "1.08"}], ",", 
       RowBox[{"ScaleArrowValue", "=", "300"}], "\[IndentingNewLine]", ",", 
       RowBox[{"rofun2", "=", "0"}], ",", 
       RowBox[{"PC1", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"PC2", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"\[Sigma]nList", "=", 
        RowBox[{"{", "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"\[Sigma]f", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0", "&"}], ",", 
            RowBox[{"0", "&"}], ",", 
            RowBox[{"0", "&"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0", "&"}], ",", 
            RowBox[{"0", "&"}], ",", 
            RowBox[{"0", "&"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0", "&"}], ",", 
            RowBox[{"0", "&"}], ",", 
            RowBox[{"0", "&"}]}], "}"}]}], "}"}]}], ",", 
       RowBox[{"PltRange", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"outf", "=", "Null"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Grid", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{
            "\"\<Choose working directory of the project\>\"", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"WorkDir", "=", 
               RowBox[{"SystemDialogInput", "[", 
                RowBox[{"\"\<Directory\>\"", ",", 
                 RowBox[{
                 "WindowTitle", "\[Rule]", 
                  "\"\<Choose working directory\>\""}]}], "]"}]}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "740"}]}], "]"}], ",", 
           "SpanFromLeft"}], "}"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{
            "\"\<Choose directory of reference configuration\>\"", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"WorkDir", "===", "\"\<Null\>\""}], "||", 
                 RowBox[{"WorkDir", "===", "$Canceled"}]}], ",", 
                RowBox[{
                 RowBox[{
                 "CenterMessageDialog", "[", 
                  "\"\<Please Choose working directory of the project.\>\"", 
                  "]"}], ";"}], "\[IndentingNewLine]", ",", 
                RowBox[{
                 RowBox[{"RefDir", "=", 
                  RowBox[{"SystemDialogInput", "[", 
                   RowBox[{"\"\<Directory\>\"", ",", "WorkDir", ",", 
                    RowBox[{
                    "WindowTitle", "\[Rule]", 
                    "\"\<Choose directory of reference configuration\>\""}]}],
                    "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "370"}]}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"Button", "[", 
            RowBox[{
            "\"\<Choose directory of deformed configuration\>\"", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"WorkDir", "===", "\"\<Null\>\""}], "||", 
                 RowBox[{"WorkDir", "===", "$Canceled"}]}], ",", 
                RowBox[{
                 RowBox[{
                 "CenterMessageDialog", "[", 
                  "\"\<Please Choose working directory of the project.\>\"", 
                  "]"}], ";"}], "\[IndentingNewLine]", ",", 
                RowBox[{
                 RowBox[{"DefDir", "=", 
                  RowBox[{"SystemDialogInput", "[", 
                   RowBox[{"\"\<Directory\>\"", ",", "WorkDir", ",", 
                    RowBox[{
                    "WindowTitle", "\[Rule]", 
                    "\"\<Choose directory of deformed configuration\>\""}]}], 
                   "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]}], 
          "}"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{
            "\"\<Plot the reference particle\>\"", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"RefDir", "===", "$Canceled"}], "||", 
                 RowBox[{"RefDir", "===", "\"\<Null\>\""}]}], ",", 
                RowBox[{
                 RowBox[{
                 "CenterMessageDialog", "[", 
                  "\"\<Please Choose directory of reference \
configuration.\>\"", "]"}], ";"}], "\[IndentingNewLine]", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"radius", ",", "zd", ",", "Vol1", ",", "PC1"}], 
                   "}"}], "=", 
                  RowBox[{"GetPointCloud", "[", 
                   RowBox[{"RefDir", ",", 
                    RowBox[{"BinarizeThreshold", "->", "BT"}], ",", 
                    RowBox[{"EdgesScale", "->", "ES"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"PltRange", "=", 
                  RowBox[{"CoordinateBounds", "[", 
                   RowBox[{"Join", "[", 
                    RowBox[{"PC1", ",", "PC2"}], "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Plt1", "=", 
                  RowBox[{"PlotFitting", "[", 
                   RowBox[{
                    RowBox[{"radius", "&"}], ",", "PC1", ",", "LightRed", ",",
                     "PltRange"}], "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"Plt3", "=", 
                  RowBox[{"Graphics", "[", 
                   RowBox[{"{", 
                    RowBox[{"White", ",", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "0.7"}], "}"}]}], "]"}]}], "}"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"PC2", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"Plt2", "=", 
                    RowBox[{"PlotFitting", "[", 
                    RowBox[{
                    "rofun2", ",", "PC2", ",", "Blue", ",", "PltRange"}], 
                    "]"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
              ";"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"Button", "[", 
            RowBox[{
            "\"\<Plot the deformed particle\>\"", ",", "\[IndentingNewLine]", 
             
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"zd", "===", "\"\<Null\>\""}], "||", 
                 RowBox[{"DefDir", "===", "\"\<Null\>\""}], "||", 
                 RowBox[{"DefDir", "===", "$Canceled"}]}], ",", 
                RowBox[{
                 RowBox[{
                 "CenterMessageDialog", "[", 
                  "\"\<Please Choose directory of deformed configuration and \
plot the reference particle.\>\"", "]"}], ";"}], "\[IndentingNewLine]", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"rofun2", ",", "PC2", ",", "Vol2"}], "}"}], "=", 
                  RowBox[{"GetPointCloud", "[", 
                   RowBox[{"zd", ",", "DefDir", ",", 
                    RowBox[{"BinarizeThreshold", "->", "BT"}], ",", 
                    RowBox[{"EdgesScale", "->", "ES"}]}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"PltRange", "=", 
                  RowBox[{"CoordinateBounds", "[", 
                   RowBox[{"Join", "[", 
                    RowBox[{"PC1", ",", "PC2"}], "]"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Plt2", "=", 
                  RowBox[{"PlotFitting", "[", 
                   RowBox[{
                   "rofun2", ",", "PC2", ",", "Blue", ",", "PltRange"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"Plt3", "=", 
                  RowBox[{"Graphics", "[", 
                   RowBox[{"{", 
                    RowBox[{"White", ",", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "0.7"}], "}"}]}], "]"}]}], "}"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"PC1", "\[NotEqual]", 
                    RowBox[{"{", "}"}]}], ",", 
                   RowBox[{"Plt1", "=", 
                    RowBox[{"PlotFitting", "[", 
                    RowBox[{
                    RowBox[{"radius", "&"}], ",", "PC1", ",", "LightRed", ",",
                     "PltRange"}], "]"}]}]}], "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
             ",", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]}], 
          "}"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{
            "\"\<Perform Finite Element Calculation\>\"", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"rofun2", "===", "0"}], ")"}], "||", 
                 RowBox[{"radius", "===", "\"\<Null\>\""}]}], ",", 
                RowBox[{
                 RowBox[{
                 "CenterMessageDialog", "[", 
                  "\"\<Please Plot the reference particle and Plot the \
deformed particle.\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"AP", ",", "EED", ",", "EE", ",", "\[Sigma]f"}], 
                    "}"}], "=", 
                    RowBox[{"FEM", "[", 
                    RowBox[{
                    "radius", ",", "rofun2", ",", "Y0", ",", "\[Nu]0", ",", 
                    RowBox[{"h", "->", "MeshRefineFactor"}]}], "]"}]}], 
                   ";"}]}], "*)"}], "\[IndentingNewLine]", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"AP", ",", "EED", ",", "EE", ",", "\[Sigma]f"}], 
                   "}"}], "=", 
                  RowBox[{"MyFEM", "[", 
                   RowBox[{
                   "radius", ",", "rofun2", ",", "Y0", ",", "\[Nu]0", ",", 
                    "MeshRefineFactor"}], "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{
                 "CenterMessageDialog", "[", 
                  "\"\<Finite Element Calculation is done.\>\"", "]"}], 
                 ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Plot Traction\>\"", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"rofun2", "===", "0"}], "||", 
                 RowBox[{"radius", "===", "\"\<Null\>\""}], "||", 
                 RowBox[{"\[Sigma]f", "===", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "&"}], ",", 
                    RowBox[{"0", "&"}], ",", 
                    RowBox[{"0", "&"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "&"}], ",", 
                    RowBox[{"0", "&"}], ",", 
                    RowBox[{"0", "&"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "&"}], ",", 
                    RowBox[{"0", "&"}], ",", 
                    RowBox[{"0", "&"}]}], "}"}]}], "}"}]}]}], ",", 
                RowBox[{
                 RowBox[{
                 "CenterMessageDialog", "[", 
                  "\"\<Please Perform Finite Element Calculation.\>\"", "]"}],
                  ";"}], "\[IndentingNewLine]", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "Plt1", ",", "Plt2", ",", "Plt3", ",", "\[Sigma]nList"}], 
                   "}"}], "=", 
                  RowBox[{"TractionPlot", "[", 
                   RowBox[{
                   "radius", ",", "rofun2", ",", "\[Sigma]f", ",", 
                    "ScaleFactor", ",", "rTube", ",", "ArrowHeadSize", ",", 
                    "MinArrowLength", ",", "ScaleArrowH", ",", 
                    "ScaleArrowValue"}], "]"}]}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
             ",", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]}], 
          "}"}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"(*", 
           RowBox[{"Button", "[", 
            RowBox[{
            "\"\<Save reults to mx file\>\"", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Put", "[", 
               RowBox[{
               "radius", ",", "zd", ",", "Vol1", ",", "PC1", ",", "rofun2", 
                ",", "PC2", ",", "Vol2", ",", "AP", ",", "EE", ",", 
                "\[Sigma]f", ",", 
                RowBox[{"SystemDialogInput", "[", 
                 RowBox[{"\"\<FileSave\>\"", ",", 
                  RowBox[{"FileNameJoin", "[", 
                   RowBox[{"{", 
                    RowBox[{"WorkDir", ",", "\"\<Particle#Time#.mx\>\""}], 
                    "}"}], "]"}]}], "]"}]}], "]"}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], "*)"}],
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Button", "[", 
            RowBox[{
            "\"\<Output surface normal stress to Excel\>\"", ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"\[Sigma]nList", "===", 
                  RowBox[{"{", "}"}]}], "||", 
                 RowBox[{"WorkDir", "===", "\"\<Null\>\""}], "||", 
                 RowBox[{"WorkDir", "===", "$Canceled"}]}], ",", 
                RowBox[{
                 RowBox[{
                 "CenterMessageDialog", "[", "\"\<Please Plot Traction.\>\"", 
                  "]"}], ";"}], "\[IndentingNewLine]", ",", 
                RowBox[{
                 RowBox[{"outf", "=", 
                  RowBox[{"SystemDialogInput", "[", 
                   RowBox[{"\"\<FileSave\>\"", ",", 
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "WorkDir", ",", 
                    "\"\<NormalStressDistribution_Particle#Time#.xls\>\""}], 
                    "}"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"Export", "[", 
                  RowBox[{"outf", ",", 
                   RowBox[{"Prepend", "[", 
                    RowBox[{
                    "\[Sigma]nList", ",", "\"\<Normal Stress (Pa)\>\""}], 
                    "]"}], ",", "\"\<XLS\>\""}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"SystemOpen", "[", "outf", "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Plt1", "=", 
                  RowBox[{"HistoPlot", "[", "\[Sigma]nList", "]"}]}], ";"}]}],
                "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
             ",", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
           "\[IndentingNewLine]", ",", 
           RowBox[{"Button", "[", 
            RowBox[{
            "\"\<Open Parameter Palette\>\"", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"apc", "=", "AbsoluteCurrentValue"}], "}"}], ",", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"parentCenter", "=", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"apc", "[", "WindowMargins", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{";;", ",", "1"}], "]"}], "]"}], "+", 
                    RowBox[{".7", 
                    RowBox[{"apc", "[", "WindowSize", "]"}]}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}], 
                    "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"CreatePalette", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"Panel", "[", 
                    RowBox[{
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<For Image Processing:\>\"", ",", "Bold"}], 
                    "]"}], ",", "SpanFromLeft", ",", "SpanFromLeft"}], "}"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Item", "[", 
                    RowBox[{"\"\<Binarize Threshold\>\"", ",", 
                    RowBox[{"Alignment", "\[Rule]", "Right"}]}], "]"}], ",", 
                    RowBox[{"Slider", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "BT", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.01", ",", "0.2"}], "}"}]}], "]"}], ",", 
                    RowBox[{"Dynamic", "@", "BT"}]}], "}"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Item", "[", 
                    RowBox[{"\"\<Edge Detect Scale\>\"", ",", 
                    RowBox[{"Alignment", "\[Rule]", "Right"}]}], "]"}], ",", 
                    RowBox[{"Slider", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "ES", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "20"}], "}"}]}], "]"}], ",", " ", 
                    RowBox[{"Dynamic", "[", "ES", "]"}]}], "}"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<For Finite Element Calculation:\>\"", ",", "Bold"}], 
                    "]"}], ",", "SpanFromLeft", ",", "SpanFromLeft"}], "}"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Item", "[", 
                    RowBox[{"\"\<Young's modulus (Pa)\>\"", ",", 
                    RowBox[{"Alignment", "\[Rule]", "Right"}]}], "]"}], ",", 
                    RowBox[{"InputField", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "Y0", "]"}], ",", "Number"}], 
                    "]"}], ",", 
                    RowBox[{"Dynamic", "[", "Y0", "]"}]}], "}"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Item", "[", 
                    RowBox[{"\"\<Poisson's ratio\>\"", ",", 
                    RowBox[{"Alignment", "\[Rule]", "Right"}]}], "]"}], ",", 
                    RowBox[{"InputField", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "\[Nu]0", "]"}], ",", "Number"}], 
                    "]"}], ",", 
                    RowBox[{"Dynamic", "[", "\[Nu]0", "]"}]}], "}"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Item", "[", 
                    RowBox[{"\"\<Mesh Refine Factor\>\"", ",", 
                    RowBox[{"Alignment", "\[Rule]", "Right"}]}], "]"}], ",", 
                    RowBox[{"PopupMenu", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", "MeshRefineFactor"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "0.01", ",", "0.02", ",", "0.05", ",", "0.1", ",", "0.2", 
                    ",", "0.5", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
                    " ", 
                    RowBox[{"Dynamic", "[", "MeshRefineFactor", "]"}]}], 
                    "}"}], "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<For Displaying Traction Arrows:\>\"", ",", "Bold"}], 
                    "]"}], ",", "SpanFromLeft", ",", "SpanFromLeft"}], "}"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Item", "[", 
                    RowBox[{"\"\<Arrow Head Size\>\"", ",", 
                    RowBox[{"Alignment", "\[Rule]", "Right"}]}], "]"}], ",", 
                    RowBox[{"Slider", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "ArrowHeadSize", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.01", ",", "0.05"}], "}"}]}], "]"}], ",", " ", 
                    RowBox[{"Dynamic", "[", "ArrowHeadSize", "]"}]}], "}"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Item", "[", 
                    RowBox[{"\"\<Radius of Tails\>\"", ",", 
                    RowBox[{"Alignment", "\[Rule]", "Right"}]}], "]"}], ",", 
                    RowBox[{"Slider", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "rTube", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.1", ",", "1"}], "}"}]}], "]"}], ",", " ", 
                    RowBox[{"Dynamic", "[", "rTube", "]"}]}], "}"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Item", "[", 
                    RowBox[{"\"\<Scale Factor\>\"", ",", 
                    RowBox[{"Alignment", "\[Rule]", "Right"}]}], "]"}], ",", 
                    RowBox[{"Slider", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "ScaleFactor", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.005", ",", "0.2"}], "}"}]}], "]"}], ",", " ", 
                    RowBox[{"Dynamic", "[", "ScaleFactor", "]"}]}], "}"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Item", "[", 
                    RowBox[{"\"\<Minimum Length\>\"", ",", 
                    RowBox[{"Alignment", "\[Rule]", "Right"}]}], "]"}], ",", 
                    RowBox[{"Slider", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", "MinArrowLength", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "5"}], "}"}]}], "]"}], ",", " ", 
                    RowBox[{"Dynamic", "[", "MinArrowLength", "]"}]}], "}"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Item", "[", 
                    RowBox[{"\"\<ScaleBar Value (Pa)\>\"", ",", 
                    RowBox[{"Alignment", "\[Rule]", "Right"}]}], "]"}], ",", 
                    RowBox[{"PopupMenu", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "@", "ScaleArrowValue"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "50", ",", "100", ",", "150", ",", "200", ",", "250", ",",
                     "300", ",", "350", ",", "400", ",", "450", ",", "500"}], 
                    "}"}]}], "]"}], ",", " ", 
                    RowBox[{"Dynamic", "[", "ScaleArrowValue", "]"}]}], "}"}],
                     "\[IndentingNewLine]", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Button", "[", 
                    RowBox[{
                    "\"\<Reset All Parameters to Default Value\>\"", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"BT", "=", "0.06"}], ";", 
                    RowBox[{"ES", "=", "10"}], ";", 
                    RowBox[{"Y0", "=", "262"}], ";", 
                    RowBox[{"\[Nu]0", "=", "0.443"}], ";", 
                    RowBox[{"MeshRefineFactor", "=", "0.2"}], ";", 
                    RowBox[{"ScaleFactor", "=", "0.03"}], ";", 
                    RowBox[{"rTube", "=", "0.25"}], ";", 
                    RowBox[{"ArrowHeadSize", "=", "0.03"}], ";", 
                    RowBox[{"MinArrowLength", "=", "4"}], ";", 
                    RowBox[{"ScaleArrowValue", "=", "300"}], ";"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], 
                    ",", "SpanFromLeft", ",", "SpanFromLeft"}], "}"}]}], 
                    "\[IndentingNewLine]", "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
                    RowBox[{"BaseStyle", "->", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FontSize", "\[Rule]", "13"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], 
                    "}"}]}], "\[IndentingNewLine]", ",", 
                    RowBox[{"Spacings", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"4", "\[Rule]", "2"}], ",", 
                    RowBox[{"8", "\[Rule]", "2"}], ",", 
                    RowBox[{"14", "\[Rule]", "2"}]}], "}"}]}], "}"}]}]}], 
                    "\[IndentingNewLine]", "]"}], ",", 
                    RowBox[{"FrameMargins", "\[Rule]", "14"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"500", ",", "450"}], "}"}]}]}], "]"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{"NotebookDynamicExpression", "\[RuleDelayed]", 
                    RowBox[{"Refresh", "[", 
                    RowBox[{
                    RowBox[{"SetOptions", "[", 
                    RowBox[{
                    RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
                    RowBox[{"WindowMargins", "\[Rule]", 
                    RowBox[{"(", 
                    RowBox[{"parentCenter", "-", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{".5", 
                    RowBox[{"apc", "[", "WindowSize", "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}]}], ")"}]}],
                     "\[IndentingNewLine]", ",", 
                    RowBox[{
                    "NotebookDynamicExpression", "\[Rule]", "None"}]}], "]"}],
                     ",", "None"}], "]"}]}], ",", 
                    RowBox[{"WindowFloating", "\[Rule]", "True"}], ",", 
                    RowBox[{"WindowClickSelect", "\[Rule]", "True"}], 
                    "\[IndentingNewLine]", ",", 
                    RowBox[{
                    "WindowTitle", "\[Rule]", "\"\<Parameter Palette\>\""}]}],
                     "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], "]"}], 
              ";"}], "\[IndentingNewLine]", ",", 
             RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}]}], 
          "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"Spacings", "\[Rule]", "1"}], ",", 
       RowBox[{"Alignment", "\[Rule]", "Left"}], ",", 
       RowBox[{"BaseStyle", "->", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "13"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "}"}]}]}],
       "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
   RowBox[{"LocalizeVariables", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 ShowCellBracket->False,
 CellOpen->False,
 InitializationCell->True,
 CellChangeTimes->{{3.79700193437501*^9, 3.7970019350090647`*^9}, {
   3.79753701608536*^9, 3.797537044003667*^9}, {3.797537399936626*^9, 
   3.797537424658263*^9}, {3.7975953674555063`*^9, 3.7975953677899837`*^9}, {
   3.7975985262465143`*^9, 3.797598529005829*^9}, {3.7975986472345943`*^9, 
   3.797598689346959*^9}, {3.79761357393191*^9, 3.797613579024407*^9}, {
   3.797613623462797*^9, 3.797613628862521*^9}, {3.797613833601057*^9, 
   3.7976138603784037`*^9}, 3.79761475470385*^9, {3.7976159530052156`*^9, 
   3.7976159575312*^9}, {3.79761755379887*^9, 3.797617585515909*^9}, {
   3.797617639081637*^9, 3.797617639743143*^9}, {3.7976233443769083`*^9, 
   3.797623374606634*^9}, {3.797623405418751*^9, 3.79762340600138*^9}, {
   3.7976234488672323`*^9, 3.797623510101347*^9}, {3.797623703382144*^9, 
   3.797623737125011*^9}, {3.797623773937451*^9, 3.7976237889680233`*^9}, {
   3.797623820449747*^9, 3.797623830275497*^9}, {3.797623907458886*^9, 
   3.797623910506809*^9}, {3.7976241489143257`*^9, 3.79762414924249*^9}},
 Background->GrayLevel[1],
 CellTags->{"Subroutines", "GUI"},
 CellLabel->"In[1]:=",ExpressionUUID->"15be6569-ffe6-43fb-8f6d-be0398693fa1"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`AP$$ = "Null", $CellContext`DefDir$$ = 
    "Null", $CellContext`EE$$ = "Null", $CellContext`EED$$ = 
    "Null", $CellContext`Plt1$$ = Graphics[{
      GrayLevel[1], 
      EdgeForm[
       GrayLevel[0]], 
      Rectangle[{0, 0}]}, ImageSize -> Medium], $CellContext`Plt2$$ = 
    Graphics[{
      GrayLevel[1], 
      EdgeForm[
       GrayLevel[0]], 
      Rectangle[{0, 0}]}, ImageSize -> Medium], $CellContext`Plt3$$ = 
    Graphics[{
      GrayLevel[1], 
      Rectangle[{0, 0}, {10, 0.7}]}, ImageSize -> 
     360], $CellContext`radius$$ = "Null", $CellContext`RefDir$$ = 
    "Null", $CellContext`Vol1$$ = "Null", $CellContext`Vol2$$ = 
    "Null", $CellContext`WorkDir$$ = "Null", $CellContext`zd$$ = "Null", 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`WorkDir$$], "Null"}, 0}, {{
       Hold[$CellContext`RefDir$$], "Null"}, 0}, {{
       Hold[$CellContext`DefDir$$], "Null"}, 0}, {{
       Hold[$CellContext`Vol1$$], "Null"}, 0}, {{
       Hold[$CellContext`Vol2$$], "Null"}, 0}, {{
       Hold[$CellContext`radius$$], "Null"}, 0}, {{
       Hold[$CellContext`AP$$], "Null"}, 0}, {{
       Hold[$CellContext`zd$$], "Null"}, 0}, {{
       Hold[$CellContext`EED$$], "Null"}, 0}, {{
       Hold[$CellContext`EE$$], "Null"}, 0}, {{
       Hold[$CellContext`Plt1$$], 
       Graphics[{
         GrayLevel[1], 
         EdgeForm[
          GrayLevel[0]], 
         Rectangle[{0, 0}]}, ImageSize -> Medium]}, 0}, {{
       Hold[$CellContext`Plt2$$], 
       Graphics[{
         GrayLevel[1], 
         EdgeForm[
          GrayLevel[0]], 
         Rectangle[{0, 0}]}, ImageSize -> Medium]}, 0}, {{
       Hold[$CellContext`Plt3$$], 
       Graphics[{
         GrayLevel[1], 
         Rectangle[{0, 0}, {10, 0.7}]}, ImageSize -> 360]}, 0}, {
      Hold[
       DynamicModule[{$CellContext`BT = 0.06, $CellContext`ES = 
         10, $CellContext`Y0 = 262., $CellContext`\[Nu]0 = 
         0.443, $CellContext`MeshRefineFactor = 0.2, 
         Null, $CellContext`ScaleFactor = 0.03, $CellContext`rTube = 
         0.25, $CellContext`ArrowHeadSize = 0.03, $CellContext`MinArrowLength = 
         4, $CellContext`ScaleArrowH = 1.08, $CellContext`ScaleArrowValue = 
         300, $CellContext`rofun2 = 
         0, $CellContext`PC1 = {}, $CellContext`PC2 = {}, $CellContext`\
\[Sigma]nList = {}, $CellContext`\[Sigma]f = {{0& , 0& , 0& }, {
           0& , 0& , 0& }, {
           0& , 0& , 0& }}, $CellContext`PltRange = {}, $CellContext`outf = 
         Null}, 
        Grid[{{
           Button[
           "Choose working directory of the project", $CellContext`WorkDir$$ = 
             SystemDialogInput[
              "Directory", WindowTitle -> "Choose working directory"]; Null, 
            Method -> "Queued", ImageSize -> 740], SpanFromLeft}, {
           Button["Choose directory of reference configuration", If[
              
              Or[$CellContext`WorkDir$$ === 
               "Null", $CellContext`WorkDir$$ === $Canceled], \
$CellContext`CenterMessageDialog[
               "Please Choose working directory of the project."]; 
              Null, $CellContext`RefDir$$ = 
               SystemDialogInput[
                "Directory", $CellContext`WorkDir$$, WindowTitle -> 
                 "Choose directory of reference configuration"]; Null]; Null, 
            Method -> "Queued", ImageSize -> 370], 
           Button["Choose directory of deformed configuration", If[
              
              Or[$CellContext`WorkDir$$ === 
               "Null", $CellContext`WorkDir$$ === $Canceled], \
$CellContext`CenterMessageDialog[
               "Please Choose working directory of the project."]; 
              Null, $CellContext`DefDir$$ = 
               SystemDialogInput[
                "Directory", $CellContext`WorkDir$$, WindowTitle -> 
                 "Choose directory of deformed configuration"]; Null]; Null, 
            Method -> "Queued"]}, {
           Button["Plot the reference particle", If[
              Or[$CellContext`RefDir$$ === $Canceled, $CellContext`RefDir$$ === 
               "Null"], $CellContext`CenterMessageDialog[
               "Please Choose directory of reference configuration."]; 
              Null, {$CellContext`radius$$, $CellContext`zd$$, \
$CellContext`Vol1$$, $CellContext`PC1} = 
               HCMP`GetPointCloud[$CellContext`RefDir$$, \
$CellContext`BinarizeThreshold -> $CellContext`BT, $CellContext`EdgesScale -> \
$CellContext`ES]; $CellContext`PltRange = CoordinateBounds[
                 
                 Join[$CellContext`PC1, $CellContext`PC2]]; \
$CellContext`Plt1$$ = 
               HCMP`PlotFitting[$CellContext`radius$$& , $CellContext`PC1, 
                 LightRed, $CellContext`PltRange]; $CellContext`Plt3$$ = 
               Graphics[{White, 
                  Rectangle[{0, 0}, {10, 0.7}]}]; 
              If[$CellContext`PC2 != {}, $CellContext`Plt2$$ = 
                HCMP`PlotFitting[$CellContext`rofun2, $CellContext`PC2, 
                  Blue, $CellContext`PltRange]]; Null]; Null, Method -> 
            "Queued"], 
           Button["Plot the deformed particle", If[
              
              Or[$CellContext`zd$$ === "Null", $CellContext`DefDir$$ === 
               "Null", $CellContext`DefDir$$ === $Canceled], \
$CellContext`CenterMessageDialog[
               "Please Choose directory of deformed configuration and plot \
the reference particle."]; 
              Null, {$CellContext`rofun2, $CellContext`PC2, \
$CellContext`Vol2$$} = 
               HCMP`GetPointCloud[$CellContext`zd$$, $CellContext`DefDir$$, \
$CellContext`BinarizeThreshold -> $CellContext`BT, $CellContext`EdgesScale -> \
$CellContext`ES]; $CellContext`PltRange = CoordinateBounds[
                 
                 Join[$CellContext`PC1, $CellContext`PC2]]; \
$CellContext`Plt2$$ = 
               HCMP`PlotFitting[$CellContext`rofun2, $CellContext`PC2, 
                 Blue, $CellContext`PltRange]; $CellContext`Plt3$$ = 
               Graphics[{White, 
                  Rectangle[{0, 0}, {10, 0.7}]}]; 
              If[$CellContext`PC1 != {}, $CellContext`Plt1$$ = 
                HCMP`PlotFitting[$CellContext`radius$$& , $CellContext`PC1, 
                  LightRed, $CellContext`PltRange]]; Null]; Null, Method -> 
            "Queued"]}, {
           Button["Perform Finite Element Calculation", If[
              
              Or[$CellContext`rofun2 === 0, $CellContext`radius$$ === 
               "Null"], $CellContext`CenterMessageDialog[
               "Please Plot the reference particle and Plot the deformed \
particle."]; 
              Null, {$CellContext`AP$$, $CellContext`EED$$, \
$CellContext`EE$$, $CellContext`\[Sigma]f} = 
               HCMP`MyFEM[$CellContext`radius$$, $CellContext`rofun2, \
$CellContext`Y0, $CellContext`\[Nu]0, $CellContext`MeshRefineFactor]; \
$CellContext`CenterMessageDialog["Finite Element Calculation is done."]; 
              Null]; Null, Method -> "Queued"], 
           Button["Plot Traction", If[
              
              Or[$CellContext`rofun2 === 0, $CellContext`radius$$ === 
               "Null", $CellContext`\[Sigma]f === {{0& , 0& , 0& }, {
                 0& , 0& , 0& }, {
                 0& , 0& , 0& }}], $CellContext`CenterMessageDialog[
               "Please Perform Finite Element Calculation."]; 
              Null, {$CellContext`Plt1$$, $CellContext`Plt2$$, \
$CellContext`Plt3$$, $CellContext`\[Sigma]nList} = 
               HCMP`TractionPlot[$CellContext`radius$$, $CellContext`rofun2, \
$CellContext`\[Sigma]f, $CellContext`ScaleFactor, $CellContext`rTube, \
$CellContext`ArrowHeadSize, $CellContext`MinArrowLength, \
$CellContext`ScaleArrowH, $CellContext`ScaleArrowValue]; Null]; Null, Method -> 
            "Queued"]}, {
           Button["Output surface normal stress to Excel", If[
              
              Or[$CellContext`\[Sigma]nList === {}, $CellContext`WorkDir$$ === 
               "Null", $CellContext`WorkDir$$ === $Canceled], \
$CellContext`CenterMessageDialog["Please Plot Traction."]; 
              Null, $CellContext`outf = SystemDialogInput["FileSave", 
                 
                 FileNameJoin[{$CellContext`WorkDir$$, 
                   "NormalStressDistribution_Particle#Time#.xls"}]]; 
              Export[$CellContext`outf, 
                Prepend[$CellContext`\[Sigma]nList, "Normal Stress (Pa)"], 
                "XLS"]; SystemOpen[$CellContext`outf]; $CellContext`Plt1$$ = 
               HCMP`HistoPlot[$CellContext`\[Sigma]nList]; Null]; Null, 
            Method -> "Queued"], 
           Button[
           "Open Parameter Palette", 
            With[{$CellContext`apc$ = AbsoluteCurrentValue}, 
              With[{$CellContext`parentCenter$ = Transpose[{Part[
                    $CellContext`apc$[WindowMargins], 
                    Span[1, All], 1] + 0.7 $CellContext`apc$[WindowSize], {
                   Automatic, Automatic}}]}, CreatePalette[
                 Panel[
                  Grid[{{
                    Style["For Image Processing:", Bold], SpanFromLeft, 
                    SpanFromLeft}, {
                    Item["Binarize Threshold", Alignment -> Right], 
                    Slider[
                    Dynamic[$CellContext`BT], {0.01, 0.2}], 
                    Dynamic[$CellContext`BT]}, {
                    Item["Edge Detect Scale", Alignment -> Right], 
                    Slider[
                    Dynamic[$CellContext`ES], {2, 20}], 
                    Dynamic[$CellContext`ES]}, {
                    Style["For Finite Element Calculation:", Bold], 
                    SpanFromLeft, SpanFromLeft}, {
                    Item["Young's modulus (Pa)", Alignment -> Right], 
                    InputField[
                    Dynamic[$CellContext`Y0], Number], 
                    Dynamic[$CellContext`Y0]}, {
                    Item["Poisson's ratio", Alignment -> Right], 
                    InputField[
                    Dynamic[$CellContext`\[Nu]0], Number], 
                    Dynamic[$CellContext`\[Nu]0]}, {
                    Item["Mesh Refine Factor", Alignment -> Right], 
                    PopupMenu[
                    Dynamic[$CellContext`MeshRefineFactor], {
                    0.01, 0.02, 0.05, 0.1, 0.2, 0.5, 1, 2}], 
                    Dynamic[$CellContext`MeshRefineFactor]}, {
                    Style["For Displaying Traction Arrows:", Bold], 
                    SpanFromLeft, SpanFromLeft}, {
                    Item["Arrow Head Size", Alignment -> Right], 
                    Slider[
                    Dynamic[$CellContext`ArrowHeadSize], {0.01, 0.05}], 
                    Dynamic[$CellContext`ArrowHeadSize]}, {
                    Item["Radius of Tails", Alignment -> Right], 
                    Slider[
                    Dynamic[$CellContext`rTube], {0.1, 1}], 
                    Dynamic[$CellContext`rTube]}, {
                    Item["Scale Factor", Alignment -> Right], 
                    Slider[
                    Dynamic[$CellContext`ScaleFactor], {0.005, 0.2}], 
                    Dynamic[$CellContext`ScaleFactor]}, {
                    Item["Minimum Length", Alignment -> Right], 
                    Slider[
                    Dynamic[$CellContext`MinArrowLength], {1, 5}], 
                    Dynamic[$CellContext`MinArrowLength]}, {
                    Item["ScaleBar Value (Pa)", Alignment -> Right], 
                    PopupMenu[
                    Dynamic[$CellContext`ScaleArrowValue], {50, 100, 150, 200,
                     250, 300, 350, 400, 450, 500}], 
                    Dynamic[$CellContext`ScaleArrowValue]}, {
                    Button[
                    "Reset All Parameters to Default Value", $CellContext`BT = 
                    0.06; $CellContext`ES = 10; $CellContext`Y0 = 
                    262; $CellContext`\[Nu]0 = 
                    0.443; $CellContext`MeshRefineFactor = 
                    0.2; $CellContext`ScaleFactor = 0.03; $CellContext`rTube = 
                    0.25; $CellContext`ArrowHeadSize = 
                    0.03; $CellContext`MinArrowLength = 
                    4; $CellContext`ScaleArrowValue = 300; Null, Method -> 
                    "Queued"], SpanFromLeft, SpanFromLeft}}, Alignment -> 
                   Left, BaseStyle -> {
                    FontSize -> 13, FontFamily -> "Helvetica"}, 
                   Spacings -> {2, {4 -> 2, 8 -> 2, 14 -> 2}}], FrameMargins -> 
                  14, ImageSize -> {500, 450}], NotebookDynamicExpression :> 
                 Refresh[
                   SetOptions[
                    EvaluationNotebook[], 
                    WindowMargins -> $CellContext`parentCenter$ - 
                    Transpose[{0.5 $CellContext`apc$[WindowSize], {0, 0}}], 
                    NotebookDynamicExpression -> None], None], WindowFloating -> 
                 True, WindowClickSelect -> True, WindowTitle -> 
                 "Parameter Palette"]; Null]]; Null, Method -> "Queued"]}}, 
         Spacings -> 1, Alignment -> Left, 
         BaseStyle -> {FontSize -> 13, FontFamily -> "Helvetica"}], 
        DynamicModuleValues :> {}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {730., {273.3837890625, 280.6162109375}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`AP$$ = "Null", $CellContext`DefDir$$ = 
        "Null", $CellContext`EE$$ = "Null", $CellContext`EED$$ = 
        "Null", $CellContext`Plt1$$ = Graphics[{
           GrayLevel[1], 
           EdgeForm[
            GrayLevel[0]], 
           Rectangle[{0, 0}]}, ImageSize -> Medium], $CellContext`Plt2$$ = 
        Graphics[{
           GrayLevel[1], 
           EdgeForm[
            GrayLevel[0]], 
           Rectangle[{0, 0}]}, ImageSize -> Medium], $CellContext`Plt3$$ = 
        Graphics[{
           GrayLevel[1], 
           Rectangle[{0, 0}, {10, 0.7}]}, ImageSize -> 
          360], $CellContext`radius$$ = "Null", $CellContext`RefDir$$ = 
        "Null", $CellContext`Vol1$$ = "Null", $CellContext`Vol2$$ = 
        "Null", $CellContext`WorkDir$$ = "Null", $CellContext`zd$$ = "Null"}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          StringJoin["Work Dir: ", $CellContext`WorkDir$$], SpanFromLeft}, {
          StringJoin["Reference Dir: ", $CellContext`RefDir$$], 
          SpanFromLeft}, {
          StringJoin["Deformation Dir: ", $CellContext`DefDir$$], 
          SpanFromLeft}, {$CellContext`Plt1$$, $CellContext`Plt2$$}, {
          Item[$CellContext`Plt3$$, Alignment -> Center], SpanFromLeft}, {
          StringJoin[
          "Reference Volume (\!\(\*SuperscriptBox[\(\[Mu]m\), \(3\)]\)) : ", 
           ToString[$CellContext`Vol1$$]], 
          StringJoin[
          "Deformed Volume (\!\(\*SuperscriptBox[\(\[Mu]m\), \(3\)]\)) : ", 
           ToString[$CellContext`Vol2$$]]}, {
          StringJoin["Reference Radius (\[Mu]m) : ", 
           ToString[$CellContext`radius$$]], 
          StringJoin["Average Pressure (Pa): ", 
           ToString[$CellContext`AP$$]]}, {
          StringJoin["Z-slice distance (\[Mu]m) : ", 
           ToString[$CellContext`zd$$]], 
          StringJoin[
          "Elastic Energy Density (J/\!\(\*SuperscriptBox[\(m\), \(3\)]\)): ", 
           ToString[$CellContext`EED$$]]}, {
          StringJoin["Elastic Energy (\[Mu]J): ", 
           ToString[$CellContext`EE$$, StandardForm]], SpanFromLeft}}, 
        Alignment -> Left, 
        BaseStyle -> {FontSize -> 14, FontFamily -> "Helvetica"}], 
      "Specifications" :> {{{$CellContext`WorkDir$$, "Null"}, 0, ControlType -> 
         None}, {{$CellContext`RefDir$$, "Null"}, 0, ControlType -> 
         None}, {{$CellContext`DefDir$$, "Null"}, 0, ControlType -> 
         None}, {{$CellContext`Vol1$$, "Null"}, 0, ControlType -> 
         None}, {{$CellContext`Vol2$$, "Null"}, 0, ControlType -> 
         None}, {{$CellContext`radius$$, "Null"}, 0, ControlType -> 
         None}, {{$CellContext`AP$$, "Null"}, 0, ControlType -> 
         None}, {{$CellContext`zd$$, "Null"}, 0, ControlType -> 
         None}, {{$CellContext`EED$$, "Null"}, 0, ControlType -> 
         None}, {{$CellContext`EE$$, "Null"}, 0, ControlType -> 
         None}, {{$CellContext`Plt1$$, 
          Graphics[{
            GrayLevel[1], 
            EdgeForm[
             GrayLevel[0]], 
            Rectangle[{0, 0}]}, ImageSize -> Medium]}, 0, ControlType -> 
         None}, {{$CellContext`Plt2$$, 
          Graphics[{
            GrayLevel[1], 
            EdgeForm[
             GrayLevel[0]], 
            Rectangle[{0, 0}]}, ImageSize -> Medium]}, 0, ControlType -> 
         None}, {{$CellContext`Plt3$$, 
          Graphics[{
            GrayLevel[1], 
            Rectangle[{0, 0}, {10, 0.7}]}, ImageSize -> 360]}, 0, ControlType -> 
         None}, 
        DynamicModule[{$CellContext`BT = 0.06, $CellContext`ES = 
          10, $CellContext`Y0 = 262., $CellContext`\[Nu]0 = 
          0.443, $CellContext`MeshRefineFactor = 0.2, 
          Null, $CellContext`ScaleFactor = 0.03, $CellContext`rTube = 
          0.25, $CellContext`ArrowHeadSize = 
          0.03, $CellContext`MinArrowLength = 4, $CellContext`ScaleArrowH = 
          1.08, $CellContext`ScaleArrowValue = 300, $CellContext`rofun2 = 
          0, $CellContext`PC1 = {}, $CellContext`PC2 = {}, $CellContext`\
\[Sigma]nList = {}, $CellContext`\[Sigma]f = {{0& , 0& , 0& }, {
            0& , 0& , 0& }, {
            0& , 0& , 0& }}, $CellContext`PltRange = {}, $CellContext`outf = 
          Null}, 
         Grid[{{
            Button[
            "Choose working directory of the project", $CellContext`WorkDir$$ = 
              SystemDialogInput[
               "Directory", WindowTitle -> "Choose working directory"]; Null, 
             Method -> "Queued", ImageSize -> 740], SpanFromLeft}, {
            Button["Choose directory of reference configuration", If[
               
               Or[$CellContext`WorkDir$$ === 
                "Null", $CellContext`WorkDir$$ === $Canceled], \
$CellContext`CenterMessageDialog[
                "Please Choose working directory of the project."]; 
               Null, $CellContext`RefDir$$ = 
                SystemDialogInput[
                 "Directory", $CellContext`WorkDir$$, WindowTitle -> 
                  "Choose directory of reference configuration"]; Null]; Null,
              Method -> "Queued", ImageSize -> 370], 
            Button["Choose directory of deformed configuration", If[
               
               Or[$CellContext`WorkDir$$ === 
                "Null", $CellContext`WorkDir$$ === $Canceled], \
$CellContext`CenterMessageDialog[
                "Please Choose working directory of the project."]; 
               Null, $CellContext`DefDir$$ = 
                SystemDialogInput[
                 "Directory", $CellContext`WorkDir$$, WindowTitle -> 
                  "Choose directory of deformed configuration"]; Null]; Null, 
             Method -> "Queued"]}, {
            Button["Plot the reference particle", If[
               
               Or[$CellContext`RefDir$$ === $Canceled, $CellContext`RefDir$$ === 
                "Null"], $CellContext`CenterMessageDialog[
                "Please Choose directory of reference configuration."]; 
               Null, {$CellContext`radius$$, $CellContext`zd$$, \
$CellContext`Vol1$$, $CellContext`PC1} = 
                HCMP`GetPointCloud[$CellContext`RefDir$$, \
$CellContext`BinarizeThreshold -> $CellContext`BT, $CellContext`EdgesScale -> \
$CellContext`ES]; $CellContext`PltRange = CoordinateBounds[
                  
                  Join[$CellContext`PC1, $CellContext`PC2]]; \
$CellContext`Plt1$$ = 
                HCMP`PlotFitting[$CellContext`radius$$& , $CellContext`PC1, 
                  LightRed, $CellContext`PltRange]; $CellContext`Plt3$$ = 
                Graphics[{White, 
                   Rectangle[{0, 0}, {10, 0.7}]}]; 
               If[$CellContext`PC2 != {}, $CellContext`Plt2$$ = 
                 HCMP`PlotFitting[$CellContext`rofun2, $CellContext`PC2, 
                   Blue, $CellContext`PltRange]]; Null]; Null, Method -> 
             "Queued"], 
            Button["Plot the deformed particle", If[
               
               Or[$CellContext`zd$$ === "Null", $CellContext`DefDir$$ === 
                "Null", $CellContext`DefDir$$ === $Canceled], \
$CellContext`CenterMessageDialog[
                "Please Choose directory of deformed configuration and plot \
the reference particle."]; 
               Null, {$CellContext`rofun2, $CellContext`PC2, \
$CellContext`Vol2$$} = 
                HCMP`GetPointCloud[$CellContext`zd$$, $CellContext`DefDir$$, \
$CellContext`BinarizeThreshold -> $CellContext`BT, $CellContext`EdgesScale -> \
$CellContext`ES]; $CellContext`PltRange = CoordinateBounds[
                  
                  Join[$CellContext`PC1, $CellContext`PC2]]; \
$CellContext`Plt2$$ = 
                HCMP`PlotFitting[$CellContext`rofun2, $CellContext`PC2, 
                  Blue, $CellContext`PltRange]; $CellContext`Plt3$$ = 
                Graphics[{White, 
                   Rectangle[{0, 0}, {10, 0.7}]}]; 
               If[$CellContext`PC1 != {}, $CellContext`Plt1$$ = 
                 HCMP`PlotFitting[$CellContext`radius$$& , $CellContext`PC1, 
                   LightRed, $CellContext`PltRange]]; Null]; Null, Method -> 
             "Queued"]}, {
            Button["Perform Finite Element Calculation", If[
               
               Or[$CellContext`rofun2 === 0, $CellContext`radius$$ === 
                "Null"], $CellContext`CenterMessageDialog[
                "Please Plot the reference particle and Plot the deformed \
particle."]; 
               Null, {$CellContext`AP$$, $CellContext`EED$$, \
$CellContext`EE$$, $CellContext`\[Sigma]f} = 
                HCMP`MyFEM[$CellContext`radius$$, $CellContext`rofun2, \
$CellContext`Y0, $CellContext`\[Nu]0, $CellContext`MeshRefineFactor]; \
$CellContext`CenterMessageDialog["Finite Element Calculation is done."]; 
               Null]; Null, Method -> "Queued"], 
            Button["Plot Traction", If[
               
               Or[$CellContext`rofun2 === 0, $CellContext`radius$$ === 
                "Null", $CellContext`\[Sigma]f === {{0& , 0& , 0& }, {
                  0& , 0& , 0& }, {
                  0& , 0& , 0& }}], $CellContext`CenterMessageDialog[
                "Please Perform Finite Element Calculation."]; 
               Null, {$CellContext`Plt1$$, $CellContext`Plt2$$, \
$CellContext`Plt3$$, $CellContext`\[Sigma]nList} = 
                HCMP`TractionPlot[$CellContext`radius$$, $CellContext`rofun2, \
$CellContext`\[Sigma]f, $CellContext`ScaleFactor, $CellContext`rTube, \
$CellContext`ArrowHeadSize, $CellContext`MinArrowLength, \
$CellContext`ScaleArrowH, $CellContext`ScaleArrowValue]; Null]; Null, Method -> 
             "Queued"]}, {
            Button["Output surface normal stress to Excel", If[
               
               Or[$CellContext`\[Sigma]nList === {}, $CellContext`WorkDir$$ === 
                "Null", $CellContext`WorkDir$$ === $Canceled], \
$CellContext`CenterMessageDialog["Please Plot Traction."]; 
               Null, $CellContext`outf = SystemDialogInput["FileSave", 
                  
                  FileNameJoin[{$CellContext`WorkDir$$, 
                    "NormalStressDistribution_Particle#Time#.xls"}]]; 
               Export[$CellContext`outf, 
                 Prepend[$CellContext`\[Sigma]nList, "Normal Stress (Pa)"], 
                 "XLS"]; SystemOpen[$CellContext`outf]; $CellContext`Plt1$$ = 
                HCMP`HistoPlot[$CellContext`\[Sigma]nList]; Null]; Null, 
             Method -> "Queued"], 
            Button[
            "Open Parameter Palette", 
             With[{$CellContext`apc$ = AbsoluteCurrentValue}, 
               With[{$CellContext`parentCenter$ = Transpose[{Part[
                    $CellContext`apc$[WindowMargins], 
                    Span[1, All], 1] + 0.7 $CellContext`apc$[WindowSize], {
                    Automatic, Automatic}}]}, CreatePalette[
                  Panel[
                   Grid[{{
                    Style["For Image Processing:", Bold], SpanFromLeft, 
                    SpanFromLeft}, {
                    Item["Binarize Threshold", Alignment -> Right], 
                    Slider[
                    Dynamic[$CellContext`BT], {0.01, 0.2}], 
                    Dynamic[$CellContext`BT]}, {
                    Item["Edge Detect Scale", Alignment -> Right], 
                    Slider[
                    Dynamic[$CellContext`ES], {2, 20}], 
                    Dynamic[$CellContext`ES]}, {
                    Style["For Finite Element Calculation:", Bold], 
                    SpanFromLeft, SpanFromLeft}, {
                    Item["Young's modulus (Pa)", Alignment -> Right], 
                    InputField[
                    Dynamic[$CellContext`Y0], Number], 
                    Dynamic[$CellContext`Y0]}, {
                    Item["Poisson's ratio", Alignment -> Right], 
                    InputField[
                    Dynamic[$CellContext`\[Nu]0], Number], 
                    Dynamic[$CellContext`\[Nu]0]}, {
                    Item["Mesh Refine Factor", Alignment -> Right], 
                    PopupMenu[
                    Dynamic[$CellContext`MeshRefineFactor], {
                    0.01, 0.02, 0.05, 0.1, 0.2, 0.5, 1, 2}], 
                    Dynamic[$CellContext`MeshRefineFactor]}, {
                    Style["For Displaying Traction Arrows:", Bold], 
                    SpanFromLeft, SpanFromLeft}, {
                    Item["Arrow Head Size", Alignment -> Right], 
                    Slider[
                    Dynamic[$CellContext`ArrowHeadSize], {0.01, 0.05}], 
                    Dynamic[$CellContext`ArrowHeadSize]}, {
                    Item["Radius of Tails", Alignment -> Right], 
                    Slider[
                    Dynamic[$CellContext`rTube], {0.1, 1}], 
                    Dynamic[$CellContext`rTube]}, {
                    Item["Scale Factor", Alignment -> Right], 
                    Slider[
                    Dynamic[$CellContext`ScaleFactor], {0.005, 0.2}], 
                    Dynamic[$CellContext`ScaleFactor]}, {
                    Item["Minimum Length", Alignment -> Right], 
                    Slider[
                    Dynamic[$CellContext`MinArrowLength], {1, 5}], 
                    Dynamic[$CellContext`MinArrowLength]}, {
                    Item["ScaleBar Value (Pa)", Alignment -> Right], 
                    PopupMenu[
                    Dynamic[$CellContext`ScaleArrowValue], {50, 100, 150, 200,
                     250, 300, 350, 400, 450, 500}], 
                    Dynamic[$CellContext`ScaleArrowValue]}, {
                    Button[
                    "Reset All Parameters to Default Value", $CellContext`BT = 
                    0.06; $CellContext`ES = 10; $CellContext`Y0 = 
                    262; $CellContext`\[Nu]0 = 
                    0.443; $CellContext`MeshRefineFactor = 
                    0.2; $CellContext`ScaleFactor = 0.03; $CellContext`rTube = 
                    0.25; $CellContext`ArrowHeadSize = 
                    0.03; $CellContext`MinArrowLength = 
                    4; $CellContext`ScaleArrowValue = 300; Null, Method -> 
                    "Queued"], SpanFromLeft, SpanFromLeft}}, Alignment -> 
                    Left, BaseStyle -> {
                    FontSize -> 13, FontFamily -> "Helvetica"}, 
                    Spacings -> {2, {4 -> 2, 8 -> 2, 14 -> 2}}], FrameMargins -> 
                   14, ImageSize -> {500, 450}], NotebookDynamicExpression :> 
                  Refresh[
                    SetOptions[
                    EvaluationNotebook[], 
                    WindowMargins -> $CellContext`parentCenter$ - 
                    Transpose[{0.5 $CellContext`apc$[WindowSize], {0, 0}}], 
                    NotebookDynamicExpression -> None], None], WindowFloating -> 
                  True, WindowClickSelect -> True, WindowTitle -> 
                  "Parameter Palette"]; Null]]; Null, Method -> "Queued"]}}, 
          Spacings -> 1, Alignment -> Left, 
          BaseStyle -> {FontSize -> 13, FontFamily -> "Helvetica"}], 
         DynamicModuleValues :> {}]}, 
      "Options" :> {ContinuousAction -> False, LocalizeVariables -> True}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{775., {386., 392.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.797595583563184*^9, 3.797597401855784*^9, 3.797598425466062*^9, 
   3.797598698616014*^9, 3.797609136698009*^9, 3.797609401156291*^9, 
   3.797609728306715*^9, 3.797613580556806*^9, {3.797613630365528*^9, 
   3.7976136419514236`*^9}, 3.797615971436269*^9, 3.7976227265848*^9, {
   3.7976235219820747`*^9, 3.7976235471238537`*^9}, {3.797623774913476*^9, 
   3.797623789725421*^9}, 3.797623833517915*^9, 3.7976239113444977`*^9, 
   3.79762407246034*^9, 3.797624133799555*^9, {3.797624165423484*^9, 
   3.79762418094687*^9}},
 CellTags->{"Subroutines", "GUI"},
 CellLabel->"Out[9]=",ExpressionUUID->"15c64eed-614a-4367-8817-e6d8143ef24c"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 ShowCellBracket->False,
 CellOpen->False,
 CellChangeTimes->{3.797609762227309*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"841e7a5b-9d32-487a-9e11-beb30a0c7b26"]
},
InitializationCellEvaluation->True,
InitializationCellWarning->False,
WindowSize->{1920, 1035},
WindowMargins->{{Automatic, -278}, {753, Automatic}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]]}, Visible -> False, 
  FrontEndVersion -> "12.0 for Mac OS X x86 (64-bit) (April 8, 2019)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Subroutines"->{
  Cell[580, 22, 40810, 921, 19, "Input",ExpressionUUID->"15be6569-ffe6-43fb-8f6d-be0398693fa1",
   CellOpen->False,
   InitializationCell->True,
   CellTags->{"Subroutines", "GUI"}],
  Cell[41393, 945, 30021, 566, 797, "Output",ExpressionUUID->"15c64eed-614a-4367-8817-e6d8143ef24c",
   CellTags->{"Subroutines", "GUI"}]},
 "GUI"->{
  Cell[580, 22, 40810, 921, 19, "Input",ExpressionUUID->"15be6569-ffe6-43fb-8f6d-be0398693fa1",
   CellOpen->False,
   InitializationCell->True,
   CellTags->{"Subroutines", "GUI"}],
  Cell[41393, 945, 30021, 566, 797, "Output",ExpressionUUID->"15c64eed-614a-4367-8817-e6d8143ef24c",
   CellTags->{"Subroutines", "GUI"}]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Subroutines", 72212, 1536},
 {"GUI", 72545, 1543}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 40810, 921, 19, "Input",ExpressionUUID->"15be6569-ffe6-43fb-8f6d-be0398693fa1",
 CellOpen->False,
 InitializationCell->True,
 CellTags->{"Subroutines", "GUI"}],
Cell[41393, 945, 30021, 566, 797, "Output",ExpressionUUID->"15c64eed-614a-4367-8817-e6d8143ef24c",
 CellTags->{"Subroutines", "GUI"}]
}, Open  ]],
Cell[71429, 1514, 209, 4, 19, "Input",ExpressionUUID->"841e7a5b-9d32-487a-9e11-beb30a0c7b26",
 CellOpen->False]
}
]
*)

